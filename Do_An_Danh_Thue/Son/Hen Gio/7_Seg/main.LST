C51 COMPILER V9.01   MAIN                                                                  04/04/2019 09:49:10 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Tools\Keil C V4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <REGX51.H>
   2          
   3          
   4          #define OUTPUT_PIN              P3_7
   5          
   6          #define LED_FIX                 P0_0
   7          #define LED_START               P0_1
   8          #define LED_STOP                P0_2
   9          
  10          #define LED_SEC                 P0_3
  11          #define LED_MIN                 P0_4
  12          #define LED_HOUR                P0_5
  13          
  14          #define LED_INCREASE    P0_6
  15          #define LED_DECREASE    P0_7
  16          
  17          #define INCREASE                0
  18          #define DECREASE                1
  19          
  20          #define FIX                             0
  21          #define START                   1
  22          #define STOP                    2
  23          
  24          #define SEC                             1
  25          #define MIN                             2
  26          #define HOUR                    3
  27          
  28          char key[10] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
  29          volatile unsigned long tick =0, count1 = 0, count2 = 0, check = 0, tac = 0;
  30          
  31          unsigned char choose = 0;
  32          unsigned char mode = 0;
  33          
  34          unsigned char start = 0;
  35          
  36          unsigned char hour = 0;
  37          unsigned char min = 0;
  38          unsigned char sec = 0;
  39          
  40          void init_external_IRQ()
  41          {
  42   1                 IT0 = 1;
  43   1                 IT1 = 1;
  44   1                 EX0 = 1;
  45   1                 EX1 = 1;
  46   1                 EA = 1;
  47   1      }
  48          
  49          /****************** TIMER ******************************/
  50          void timer0_init()         // 1ms
  51          {
  52   1              TMOD &= ~0x0F;
  53   1              TMOD |= 0x01; // 16 bit
  54   1              TH0 = 0xFC;
  55   1              TL0 = 0x18;
C51 COMPILER V9.01   MAIN                                                                  04/04/2019 09:49:10 PAGE 2   

  56   1              ET0 = 1;   // enable timer0 interrupt
  57   1              EA = 1;
  58   1              TR0 = 1;
  59   1      }
  60          
  61          void timer1_init()         // 1ms
  62          {
  63   1              TMOD &= ~0xF0;
  64   1              TMOD |= 0x10; // 16 bit
  65   1              TH1 = 0xFC;
  66   1              TL1 = 0x18;
  67   1              ET1 = 1;   // enable timer1 interrupt
  68   1              EA = 1;
  69   1              TR1 = 1;
  70   1      }
  71          /****************** delay function ******************************/
  72          void delay(unsigned long time)
  73          {
  74   1              unsigned long current_tick = tick;
  75   1              while(!(tick - current_tick == time));
  76   1      }
  77          
  78          #define LED_7SEG  P2
  79          
  80          #define c_hour  P1_0
  81          #define d_hour  P1_1
  82          #define c_min   P1_2
  83          #define d_min   P1_3
  84          #define c_sec   P1_4
  85          #define d_sec   P1_5
  86          
  87          void quet_led()
  88          {
  89   1      /*** SEC ***/
  90   1              d_sec = 1;
  91   1              LED_7SEG =  key[sec%10];
  92   1              delay(5);
  93   1              d_sec = 0;
  94   1      
  95   1              c_sec = 1;
  96   1              LED_7SEG =  key[sec/10];
  97   1              delay(5);
  98   1              c_sec = 0;
  99   1      /*** MIN ***/
 100   1              d_min = 1;
 101   1              LED_7SEG =  key[min%10];
 102   1              delay(5);
 103   1              d_min = 0;
 104   1      
 105   1              c_min = 1;
 106   1              LED_7SEG =  key[min/10];
 107   1              delay(5);
 108   1              c_min = 0;
 109   1      /*** HOUR ***/
 110   1              d_hour = 1;
 111   1              LED_7SEG =  key[hour%10];
 112   1              delay(5);
 113   1              d_hour = 0;
 114   1      
 115   1              c_hour = 1;
 116   1              LED_7SEG =  key[hour/10];
 117   1              delay(5);
C51 COMPILER V9.01   MAIN                                                                  04/04/2019 09:49:10 PAGE 3   

 118   1              c_hour = 0;                     
 119   1      }
 120          
 121          void main()
 122          {
 123   1              min = 0;
 124   1              hour = 0;
 125   1              sec = 30;
 126   1              timer0_init();
 127   1              timer1_init();
 128   1              init_external_IRQ();
 129   1              P2 = P0 = 0x00;
 130   1              OUTPUT_PIN = 0;
 131   1              start = FIX;
 132   1      
 133   1              while(1)
 134   1              {
 135   2                      if(P1_7 ==0)
 136   2                      {
 137   3                              delay(10);
 138   3                              if(P1_7 == 0)
 139   3                              {
 140   4                                      count1 ++;
 141   4                                      if(count1 >3)
 142   4                                      {
 143   5                                              count1 = 0;
 144   5                                      }
 145   4                                      while(P1_7 == 0);
 146   4                              }
 147   3                      }
 148   2                      if(count1 == 3)
 149   2                      {
 150   3                              start = STOP;
 151   3                              LED_STOP = 1;
 152   3                              LED_START = 0;
 153   3                              LED_FIX = 0;
 154   3                              P2 = 0x00;
 155   3                              OUTPUT_PIN = 0;
 156   3                      }else if(count1 == 2)
 157   2                      {
 158   3                              start = START;
 159   3                              LED_STOP = 0;
 160   3                              LED_START = 1;
 161   3                              LED_FIX = 0;
 162   3                      }else if(count1 == 1)
 163   2                      {
 164   3                              start = FIX;
 165   3                              LED_STOP = 0;
 166   3                              LED_START = 0;
 167   3                              LED_FIX = 1;
 168   3                      }
 169   2                      if(start == FIX)
 170   2                      {
 171   3                              P0_0 = 1;
 172   3                              if(P1_6 == 0)
 173   3                              {
 174   4                                      delay(10);
 175   4                                      if(P1_6 ==0)
 176   4                                      {
 177   5                                              count2 ++;
 178   5                                              if(count2 > 2)
 179   5                                              {
C51 COMPILER V9.01   MAIN                                                                  04/04/2019 09:49:10 PAGE 4   

 180   6                                                      count2 = 0;
 181   6                                              }
 182   5                                              while(P1_6 == 0);
 183   5                                      }
 184   4                              }
 185   3                              if(count2 == 2)                 // HOUR
 186   3                              {
 187   4                                      choose = HOUR;
 188   4                                      LED_HOUR = 1;
 189   4                                      LED_MIN = 0;
 190   4                                      LED_SEC = 0;
 191   4      
 192   4                              }else if(count2 == 1)   // MIN
 193   3                              {
 194   4                                      choose = MIN;
 195   4                                      LED_HOUR = 0;
 196   4                                      LED_MIN = 1;
 197   4                                      LED_SEC = 0;
 198   4      
 199   4                              }else if(count2 == 0)    // SEC
 200   3                              {
 201   4                                      choose = SEC;
 202   4                                      LED_HOUR = 0;
 203   4                                      LED_MIN = 0;
 204   4                                      LED_SEC = 1;
 205   4      
 206   4                              }
 207   3                      }       
 208   2                      if(start == START)
 209   2                      {
 210   3                                                                      
 211   3                      }
 212   2                      quet_led();
 213   2                      
 214   2              }                               
 215   1      }
 216          /* selection mode button */
 217          void External_ISR0() interrupt 0
 218          {
 219   1              if(start == FIX)
 220   1              {
 221   2                      if(mode == INCREASE)
 222   2                      {
 223   3                              mode = DECREASE;
 224   3                              LED_DECREASE = 1;
 225   3                              LED_INCREASE = 0;
 226   3                      }else
 227   2                      {
 228   3                              mode = INCREASE;
 229   3                              LED_DECREASE = 0;
 230   3                              LED_INCREASE = 1;
 231   3                      }
 232   2              }
 233   1      }
 234          /* Increse or Decrease button */
 235          void External_ISR1() interrupt 2
 236          {
 237   1              if(start == FIX)
 238   1              {
 239   2                      if(mode == INCREASE) /* increase */
 240   2                      {
 241   3                              if(choose == HOUR)
C51 COMPILER V9.01   MAIN                                                                  04/04/2019 09:49:10 PAGE 5   

 242   3                              {
 243   4                                      hour++;
 244   4                              }else if(choose == MIN)
 245   3                              {
 246   4                                      min++;
 247   4                              }else if(choose == SEC)
 248   3                              {
 249   4                                      sec++;
 250   4                              }
 251   3                              P0_0 = ~P0_0;
 252   3                      }else /* decrease */
 253   2                      {
 254   3                              if(choose == HOUR)
 255   3                              {
 256   4                                      
 257   4                                      if(hour == 0)
 258   4                                      {
 259   5                                              hour = 23;
 260   5                                      }else if(hour >0)
 261   4                                      {
 262   5                                              hour--;
 263   5                                      }
 264   4                              }else if(choose == MIN)
 265   3                              {
 266   4                                      
 267   4                                      if(min == 0)
 268   4                                      {
 269   5                                              min = 59;
 270   5                                              if(hour >0)
 271   5                                              {
 272   6                                                      hour --;
 273   6                                              }
 274   5                                      }else if(min >0)
 275   4                                      {
 276   5                                              min--;
 277   5                                      }
 278   4                              }else if(choose == SEC)
 279   3                              {
 280   4                                      if(sec  == 0)
 281   4                                      {
 282   5                                              sec = 59;
 283   5                                              if(min >0 )
 284   5                                              {       
 285   6                                                      min --;
 286   6                                              }
 287   5                                      }else if(sec >0)
 288   4                                      {
 289   5                                              sec--;
 290   5                                      }
 291   4                              }
 292   3                              P0_0 = ~P0_0;
 293   3                      }
 294   2                      P0_0 = ~P0_0;
 295   2              }
 296   1              
 297   1              
 298   1      }
 299          void timer0_ISR(void) interrupt 1
 300          {
 301   1               tick++;
 302   1               TH0 = 0xFC;
 303   1               TL0 = 0x18;
C51 COMPILER V9.01   MAIN                                                                  04/04/2019 09:49:10 PAGE 6   

 304   1      }
 305          void timer1_ISR(void) interrupt 3
 306          {
 307   1              if(start == START)
 308   1              {
 309   2                      tac++;
 310   2                      if(tac >999)
 311   2                      {
 312   3                              tac = 0;        
 313   3                              if(sec == 0)
 314   3                              {                       
 315   4                                      if(min == 0)
 316   4                                      {       
 317   5                                              if(hour == 0)
 318   5                                              {                       
 319   6                                                      OUTPUT_PIN = 1;
 320   6                                              }else if(hour >0)
 321   5                                              {
 322   6                                                      min = 59;
 323   6                                                      hour --;
 324   6                                              }
 325   5                                      }else if(min  > 0)
 326   4                                      {
 327   5                                              sec = 59;
 328   5                                              min--;
 329   5                                      }
 330   4                              }else if(sec >0)
 331   3                              {
 332   4                                      sec--;
 333   4                              }
 334   3                      }
 335   2              }
 336   1              TH1 = 0xFC;
 337   1              TL1 = 0x18;
 338   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    982    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
